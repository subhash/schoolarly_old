<% term_totals = ActiveSupport::OrderedHash.new %>
<%terms = [] %>
<% papers = student.papers %>
<% Activity.all.group_by{|a| a.assessment.term }.each do |term, activities| %>
<% terms << term %>
<table class = "sep">
    <tr class="heading">
        <th colspan="7">
            <h1><%= "Term#{term}" %></h1>
        </th>
    </tr>
    <!-- creating header row !--><!-- nested hash - FA => FA1 => [] --><% h = ActiveSupport::OrderedHash.new %>
    <% activities.each do |a| %>
    <% h[a.assessment.assessment_type] = ActiveSupport::OrderedHash.new unless h.has_key?(a.assessment.assessment_type) %>
    <% h[a.assessment.assessment_type][a.assessment.name] = [] unless h[a.assessment.assessment_type].has_key?(a.assessment.name) %>
    <% h[a.assessment.assessment_type][a.assessment.name] << a %>
    <% end %>
    <% activities = h %>
    <tr class="sub-heading">
        <th colspan="2">
            Subject
        </th>
        <% activities.each do |type, t_acts| %>
        <% t_acts.each do |name, n_acts| %>
        <th>
            <%="#{name}-#{n_acts.first.assessment.weightage}%" %>
        </th>
        <% end %>
        <% if t_acts.size > 1 %>
        <th>
            TOTAL(<%=type %>)
        </th>
        <%end %>
        <% end %>
        <th>
            Total - Term<%=term %>
        </th>
    </tr>
    <!-- header row end--><!-- creating subject rows -->
	<% papers.each do |paper| %>
    <% subject = paper.subject %>
    <% s_scores = scores.select{|s|s.exam.term == term and s.exam.subject == subject} %>
    <tr>
        <td colspan="2">
            <%= subject.name %>
        </td>
        <% unless s_scores.blank? %>
        <% term_totals[subject.name] = 0 unless term_totals[subject.name] %>
        <% activities.each do |type, t_acts| %>
        <% t_acts.each do |name, n_acts| %>
        <td>
            <%=Score.weighted_aggregate(s_scores.select{|s|s.exam.name == name}) %>
        </td>
        <% end %>
        <% if t_acts.size > 1 %>
        <td>
            <%=Score.total(s_scores.select{|s|s.exam.assessment_type == type}) %>
        </td>
        <%end %>
        <% end %>
        <td>
            <%= (total = Score.total(s_scores)) %>
            <% total ? term_totals[subject.name]+= total : term_totals[subject.name] = nil %>
        </td>
        <% end %>
    </tr>
    <% end %>
</table>
<% end %>
<!-- create grand total & grade table -->
<table class = "sep">
    <tr class="heading">
        <th colspan="7">
            <h1><%= "Term#{terms.first}#{terms.from(1).collect{|t|"+"+t}}" %></h1>
        </th>
    </tr>
    <tr>
        <th colspan="2">
            Subject
        </th>
        <th>
            Grand TOTAL(All terms) 
        </th>
        <th>
            Grade
        </th>
    </tr>
    <% papers.each do |paper| %>
    <tr>
        <td colspan="2">
            <%= paper.name %>
        </td>
        <td>
            <%= (total = term_totals[paper.subject.name]) %>
        </td>
        <td>
            <%= Score.grade(total) if total %>
        </td>
    </tr>
    <% end %>
</table>
<div class="print">
    <%= link_to_function("Print SEP", "javascript:print()") %>
</div>
